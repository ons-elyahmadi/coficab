{
    "collab_server" : "",
    "contents" : "################################\n#  Model Evaluation            #\n#  AUTHOR: Adamma Morrison     #\n#  Nov 10, 2018                #\n################################\n\n# This script will generate predictions and compare models\n\n# First load models\nload(\"bin/models.RData\")\n\nrequire(tidyverse)\nrequire(forecast)\nrequire(randomForest)\nrequire(ggplot2)\nrequire(reshape2) # for melt function\nrequire(lubridate) # for highlighting dates on graphs\nrequire(ggthemes) # for plot themes\n\n# Get predictions for the 4 types of models. \nsimple_LR_copper_pred <- predict(simple_LR_copper, test)\nsimple_LR_zinc_pred <- predict(simple_LR_zinc, test)\n\nARIMA_copper_pred <- as.numeric(forecast_copper$mean)\nARIMA_zinc_pred <- as.numeric(forecast_zinc$mean)\n\nNN_copper_pred <- data.frame(nn_forecast_copper)\nNN_zinc_pred <- data.frame(nn_forecast_zinc)\n\nRF_copper_pred <-predict(RF_copper, newdata = test)\nRF_zinc_pred <-predict(RF_zinc, newdata = test)\n\n## Let's compare each models' predictions \n\n# Model Results Graph \nall_results_copper <- data.frame(predict(simple_LR_copper, data), predict(RF_copper, data), data[2], data[1])\nall_results_zinc <- data.frame(predict(simple_LR_zinc, data), predict(RF_zinc, data), data[3], data[1])\n\n# Graph for copper\ncopper_melt <- melt(all_results_copper, id = \"date\")\nggplot() +  \n       geom_line(data=copper_melt, aes(x=date, y=value, col=variable)) +\n       ggtitle(\"Predictions for Copper\") + \n       scale_color_discrete(name  =\"Models\",\n                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),                           \n                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\")) +\n      geom_rect(data=data.frame(xmin=(as.Date(c(\"2010-01-01\"))),\n                            xmax=(as.Date(c(\"2018-01-01\"))),\n                            ymin=-Inf,\n                            ymax=Inf),\n            aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),\n            fill=\"orange\",alpha=0.3) +\n      xlab(\"Year\") +\n      ylab(\"Price in USD\") +\n      theme_stata()\n\n# Graph for zinc\nzinc_melt <- melt(all_results_zinc, id = \"date\")\nggplot() +  \n       geom_line(data=zinc_melt, aes(x=date, y=value, col=variable)) +\n       ggtitle(\"Predictions for Zinc\") + \n       scale_color_discrete(name  =\"Models\",\n                           breaks=c(\"predict.simple_LR_zinc..data.\", \"predict.RF_zinc..data.\", \"zinc_price\"),                           \n                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\")) +\n      geom_rect(data=data.frame(xmin=(as.Date(c(\"2010-01-01\"))),\n                            xmax=(as.Date(c(\"2018-01-01\"))),\n                            ymin=-Inf,\n                            ymax=Inf),\n            aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),\n            fill=\"orange\",alpha=0.3) +\n      xlab(\"Year\") +\n      ylab(\"Price in USD\") +\n      theme_stata()\n\n\n# Now let's see forecast models\npar(mfrow=c(1,2))\nplot(forecast_copper, main =\"ARIMA Forecast for Copper\")\nplot(nn_forecast_copper, main =\"NN Forecast for Copper\")\n\npar(mfrow=c(1,2))\nplot(forecast_zinc, main =\"ARIMA Forecast for Zinc\")\nplot(nn_forecast_zinc, main =\"NN Forecast for Zinc\")\n\n################################\n# This part of the script will output csv files with the results of all models\n\n#write.csv(nn_forecast_zinc, \"results/nn_results_zinc.csv\", row.names = F)\n#write.csv(nn_forecast_copper, \"results/nn_results_copper.csv\", row.names = F)\n#write.csv(all_results_zinc, \"results/all_results_zinc.csv\", row.names = F)\n#write.csv(all_results_copper, \"results/all_results_copper.csv\", row.names = F)\n\n",
    "created" : 1542075431604.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3756528799",
    "id" : "5D374B6",
    "lastKnownWriteTime" : 1542086245,
    "last_content_update" : 1542086627446,
    "path" : "~/Desktop/Predicting_Metal_Costs/src/04_model_evaluation.R",
    "project_path" : "src/04_model_evaluation.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}