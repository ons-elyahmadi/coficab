{
    "data" : [
        "+ ",
        "      scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                          breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),",
        "+ ",
        "                          labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\")",
        "+ ",
        "                          )",
        "Warning message:\n",
        "Removed 15 rows containing missing values (geom_path). \n",
        "> ",
        "ggplot() +",
        "+ ",
        "      geom_rect(data=data.frame(xmin=(as.Date(c(\"2010-01-01\"))),",
        "+ ",
        "                            xmax=(as.Date(c(\"2017-04-01\"))),",
        "+ ",
        "                            ymin=-Inf,",
        "+ ",
        "                            ymax=Inf),",
        "+ ",
        "            aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),",
        "+ ",
        "            fill=\"orange\",alpha=0.3) +",
        "+ ",
        "      geom_line(data=zinc_melt, ",
        "+ ",
        "                aes(x=date, y=value, col=variable)) +",
        "+ ",
        "      ggtitle(\"Predictions for Copper\") +",
        "+ ",
        "      scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                          breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),",
        "+ ",
        "                          labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\")",
        "+ ",
        "                          )",
        "Warning message:\n",
        "Removed 15 rows containing missing values (geom_path). \n",
        "> ",
        "ggplot() +",
        "+ ",
        "      geom_rect(data=data.frame(xmin=(as.Date(c(\"2010-01-01\"))),",
        "+ ",
        "                            xmax=(as.Date(c(\"2017-04-01\"))),",
        "+ ",
        "                            ymin=-Inf,",
        "+ ",
        "                            ymax=Inf),",
        "+ ",
        "            aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),",
        "+ ",
        "            fill=\"orange\",alpha=0.3) +",
        "+ ",
        "      geom_line(data=zinc_melt, ",
        "+ ",
        "                aes(x=date, y=value, col=variable)) +",
        "+ ",
        "      ggtitle(\"Predictions for Copper\") +",
        "+ ",
        "      scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                          breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),",
        "+ ",
        "                          labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\")",
        "+ ",
        "                          )",
        "Warning message:\n",
        "Removed 15 rows containing missing values (geom_path). \n",
        "> ",
        "ggplot(copper_melt, aes(x=date, y=value, col=variable)) + geom_line() +",
        "+ ",
        "       ggtitle(\"Comparison of Models' Predictions for Copper\") +",
        "+ ",
        "       scale_shape_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),",
        "+ ",
        "                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\"))",
        "Warning message:\n",
        "Removed 15 rows containing missing values (geom_path). \n",
        "> ",
        "ggplot() +",
        "+ ",
        "      copper_melt, aes(x=date, y=value, col=variable)) + geom_line() +",
        "Error: unexpected ',' in:\n\"ggplot() +\n      copper_melt,\"\n",
        "> ",
        "      ggtitle(\"Comparison of Models' Predictions for Copper\") +",
        "+ ",
        "      scale_shape_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),",
        "+ ",
        "                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\"))",
        "Error in ggtitle(\"Comparison of Models' Predictions for Copper\") + scale_shape_discrete(name = \"Models\",  : \n  non-numeric argument to binary operator\n",
        "> ",
        "ggplot() +",
        "+ ",
        "      geom_line(copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "      ggtitle(\"Comparison of Models' Predictions for Copper\") +",
        "+ ",
        "      scale_shape_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),",
        "+ ",
        "                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\"))",
        "Error: ggplot2 doesn't know how to deal with data of class uneval\n",
        "> ",
        "ggplot() +",
        "+ ",
        "      geom_line(copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "      ggtitle(\"Comparison of Models' Predictions for Copper\") +",
        "+ ",
        "      scale_shape_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),",
        "+ ",
        "                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\"))",
        "Error: ggplot2 doesn't know how to deal with data of class uneval\n",
        "> ",
        ")",
        "Error: unexpected ')' in \")\"\n",
        "> ",
        "ggplot() +",
        "+ ",
        "      geom_line(copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "      ggtitle(\"Comparison of Models' Predictions for Copper\") +",
        "+ ",
        "      scale_shape_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),",
        "+ ",
        "                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\"))",
        "Error: ggplot2 doesn't know how to deal with data of class uneval\n",
        "> ",
        "ggplot() +",
        "+ ",
        "      geom_line(copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "      ggtitle(\"Comparison of Models' Predictions for Copper\") +",
        "+ ",
        "      scale_shape_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),",
        "+ ",
        "                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\"))",
        "Error: ggplot2 doesn't know how to deal with data of class uneval\n",
        "> ",
        "ggplot() +",
        "+ ",
        "      geom_line(copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "      ggtitle(\"Comparison of Models' Predictions for Copper\") +",
        "+ ",
        "      scale_shape_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),",
        "+ ",
        "                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\"))",
        "Error: ggplot2 doesn't know how to deal with data of class uneval\n",
        "> ",
        "> ggplot()  ",
        "Error: unexpected '>' in \">\"\n",
        "> ",
        ">       geom_line(data=copper_melt, aes(x=date, y=value, col=variable)) +",
        "Error: unexpected '>' in \">\"\n",
        "> ",
        "+       # geom_rect(data=rect, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax),",
        "+ ",
        "+       #           color=\"transparent\", fill=\"orange\", alpha=0.3) +",
        "+ ",
        "+       ggtitle(\"Predictions for Copper\") + ",
        "+ ",
        "+       scale_color_discrete(name  =\"Models\",",
        "+ ",
        "+                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),",
        "Error: unexpected '=' in:\n\"+       scale_color_discrete(name  =\"Models\",\n+                           breaks=\"\n",
        "> ",
        "+                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\") ",
        "Error in +labels = c(\"Linear Regression\", \"Random Forest\", \"Actual Price\") : \n  could not find function \"+<-\"\n",
        "> ",
        "                          )",
        "Error: unexpected ')' in \"                          )\"\n",
        "> ",
        "ggplot()  ",
        "> ",
        "       geom_line(data=copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "       # geom_rect(data=rect, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax),",
        "+ ",
        "       #           color=\"transparent\", fill=\"orange\", alpha=0.3) +",
        "+ ",
        "       ggtitle(\"Predictions for Copper\") + ",
        "+ ",
        "       scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\") ",
        "+ ",
        "                          )",
        "Error in geom_line(data = copper_melt, aes(x = date, y = value, col = variable)) +  : \n  non-numeric argument to binary operator\n",
        "> ",
        "ggplot() +  ",
        "+ ",
        "       geom_line(data=copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "       # geom_rect(data=rect, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax),",
        "+ ",
        "       #           color=\"transparent\", fill=\"orange\", alpha=0.3) +",
        "+ ",
        "       ggtitle(\"Predictions for Copper\") + ",
        "+ ",
        "       scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\") ",
        "+ ",
        "                          )",
        "Warning message:\n",
        "Removed 15 rows containing missing values (geom_path). \n",
        "> ",
        "ggplot() +  ",
        "+ ",
        "       geom_line(data=copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "       ggtitle(\"Predictions for Copper\") + ",
        "+ ",
        "       scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\") ",
        "+ ",
        "                          )",
        "Warning message:\n",
        "Removed 15 rows containing missing values (geom_path). \n",
        "> ",
        "ggplot() +  ",
        "+ ",
        "       geom_line(data=copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "       ggtitle(\"Predictions for Copper\") + ",
        "+ ",
        "       scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),                           ",
        "+ ",
        "                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\") )",
        "Warning message:\n",
        "Removed 15 rows containing missing values (geom_path). \n",
        "> ",
        "copper_melt$date",
        "  [1] \"1991-01-01\" \"1991-04-01\" \"1991-07-01\" \"1991-10-01\" \"1992-01-01\" \"1992-04-01\" \"1992-07-01\" \"1992-10-01\" \"1993-01-01\"\n [10] \"1993-04-01\" \"1993-07-01\" \"1993-10-01\" \"1994-01-01\" \"1994-04-01\" \"1994-07-01\" \"1994-10-01\" \"1995-01-01\" \"1995-04-01\"\n [19] \"1995-07-01\" \"1995-10-01\" \"1996-01-01\" \"1996-04-01\" \"1996-07-01\" \"1996-10-01\" \"1997-01-01\" \"1997-04-01\" \"1997-07-01\"\n [28] \"1997-10-01\" \"1998-01-01\" \"1998-04-01\" \"1998-07-01\" \"1998-10-01\" \"1999-01-01\" \"1999-04-01\" \"1999-07-01\" \"1999-10-01\"\n [37] \"2000-01-01\" \"2000-04-01\"",
        " \"2000-07-01\" \"2000-10-01\" \"2001-01-01\" \"2001-04-01\" \"2001-07-01\" \"2001-10-01\" \"2002-01-01\"\n [46] \"2002-04-01\" \"2002-07-01\" \"2002-10-01\" \"2003-01-01\" \"2003-04-01\" \"2003-07-01\" \"2003-10-01\" \"2004-01-01\" \"2004-04-01\"\n [55] \"2004-07-01\" \"2004-10-01\" \"2005-01-01\" \"2005-04-01\" \"2005-07-01\" \"2005-10-01\" \"2006-01-01\" \"2006-04-01\" \"2006-07-01\"\n [64] \"2006-10-01\" \"2007-01-01\" \"2007-04-01\" \"2007-07-01\" \"2007-10-01\" \"2008-01-01\" \"2008-04-01\" \"2008-07-01\" \"2008-10-01\"\n [73] \"2009-01-01\" \"2009-04-01\" \"2009-07-01\" \"2009-10-01\"",
        " \"2010-01-01\" \"2010-04-01\" \"2010-07-01\" \"2010-10-01\" \"2011-01-01\"\n [82] \"2011-04-01\" \"2011-07-01\" \"2011-10-01\" \"2012-01-01\" \"2012-04-01\" \"2012-07-01\" \"2012-10-01\" \"2013-01-01\" \"2013-04-01\"\n [91] \"2013-07-01\" \"2013-10-01\" \"2014-01-01\" \"2014-04-01\" \"2014-07-01\" \"2014-10-01\" \"2015-01-01\" \"2015-04-01\" \"2015-07-01\"\n[100] \"2015-10-01\" \"2016-01-01\" \"2016-04-01\" \"2016-07-01\" \"2016-10-01\" \"2017-01-01\" \"2017-04-01\" \"2017-07-01\" \"2017-10-01\"\n[109] \"2018-01-01\" \"2018-04-01\" \"2018-07-01\" \"1991-01-01\" \"1991-04-01\" \"1991-07-01\"",
        " \"1991-10-01\" \"1992-01-01\" \"1992-04-01\"\n[118] \"1992-07-01\" \"1992-10-01\" \"1993-01-01\" \"1993-04-01\" \"1993-07-01\" \"1993-10-01\" \"1994-01-01\" \"1994-04-01\" \"1994-07-01\"\n[127] \"1994-10-01\" \"1995-01-01\" \"1995-04-01\" \"1995-07-01\" \"1995-10-01\" \"1996-01-01\" \"1996-04-01\" \"1996-07-01\" \"1996-10-01\"\n[136] \"1997-01-01\" \"1997-04-01\" \"1997-07-01\" \"1997-10-01\" \"1998-01-01\" \"1998-04-01\" \"1998-07-01\" \"1998-10-01\" \"1999-01-01\"\n[145] \"1999-04-01\" \"1999-07-01\" \"1999-10-01\" \"2000-01-01\" \"2000-04-01\" \"2000-07-01\" \"2000-10-01\" \"2001-01-01\"",
        " \"2001-04-01\"\n[154] \"2001-07-01\" \"2001-10-01\" \"2002-01-01\" \"2002-04-01\" \"2002-07-01\" \"2002-10-01\" \"2003-01-01\" \"2003-04-01\" \"2003-07-01\"\n[163] \"2003-10-01\" \"2004-01-01\" \"2004-04-01\" \"2004-07-01\" \"2004-10-01\" \"2005-01-01\" \"2005-04-01\" \"2005-07-01\" \"2005-10-01\"\n[172] \"2006-01-01\" \"2006-04-01\" \"2006-07-01\" \"2006-10-01\" \"2007-01-01\" \"2007-04-01\" \"2007-07-01\" \"2007-10-01\" \"2008-01-01\"\n[181] \"2008-04-01\" \"2008-07-01\" \"2008-10-01\" \"2009-01-01\" \"2009-04-01\" \"2009-07-01\" \"2009-10-01\" \"2010-01-01\" \"2010-04-01\"\n[190] \"2010-07-01\"",
        " \"2010-10-01\" \"2011-01-01\" \"2011-04-01\" \"2011-07-01\" \"2011-10-01\" \"2012-01-01\" \"2012-04-01\" \"2012-07-01\"\n[199] \"2012-10-01\" \"2013-01-01\" \"2013-04-01\" \"2013-07-01\" \"2013-10-01\" \"2014-01-01\" \"2014-04-01\" \"2014-07-01\" \"2014-10-01\"\n[208] \"2015-01-01\" \"2015-04-01\" \"2015-07-01\" \"2015-10-01\" \"2016-01-01\" \"2016-04-01\" \"2016-07-01\" \"2016-10-01\" \"2017-01-01\"\n[217] \"2017-04-01\" \"2017-07-01\" \"2017-10-01\" \"2018-01-01\" \"2018-04-01\" \"2018-07-01\" \"1991-01-01\" \"1991-04-01\" \"1991-07-01\"\n[226] \"1991-10-01\" \"1992-01-01\" \"1992-04-01\"",
        " \"1992-07-01\" \"1992-10-01\" \"1993-01-01\" \"1993-04-01\" \"1993-07-01\" \"1993-10-01\"\n[235] \"1994-01-01\" \"1994-04-01\" \"1994-07-01\" \"1994-10-01\" \"1995-01-01\" \"1995-04-01\" \"1995-07-01\" \"1995-10-01\" \"1996-01-01\"\n[244] \"1996-04-01\" \"1996-07-01\" \"1996-10-01\" \"1997-01-01\" \"1997-04-01\" \"1997-07-01\" \"1997-10-01\" \"1998-01-01\" \"1998-04-01\"\n[253] \"1998-07-01\" \"1998-10-01\" \"1999-01-01\" \"1999-04-01\" \"1999-07-01\" \"1999-10-01\" \"2000-01-01\" \"2000-04-01\" \"2000-07-01\"\n[262] \"2000-10-01\" \"2001-01-01\" \"2001-04-01\" \"2001-07-01\" \"2001-10-01\"",
        " \"2002-01-01\" \"2002-04-01\" \"2002-07-01\" \"2002-10-01\"\n[271] \"2003-01-01\" \"2003-04-01\" \"2003-07-01\" \"2003-10-01\" \"2004-01-01\" \"2004-04-01\" \"2004-07-01\" \"2004-10-01\" \"2005-01-01\"\n[280] \"2005-04-01\" \"2005-07-01\" \"2005-10-01\" \"2006-01-01\" \"2006-04-01\" \"2006-07-01\" \"2006-10-01\" \"2007-01-01\" \"2007-04-01\"\n[289] \"2007-07-01\" \"2007-10-01\" \"2008-01-01\" \"2008-04-01\" \"2008-07-01\" \"2008-10-01\" \"2009-01-01\" \"2009-04-01\" \"2009-07-01\"\n[298] \"2009-10-01\" \"2010-01-01\" \"2010-04-01\" \"2010-07-01\" \"2010-10-01\" \"2011-01-01\" \"2011-04-01\"",
        " \"2011-07-01\" \"2011-10-01\"\n[307] \"2012-01-01\" \"2012-04-01\" \"2012-07-01\" \"2012-10-01\" \"2013-01-01\" \"2013-04-01\" \"2013-07-01\" \"2013-10-01\" \"2014-01-01\"\n[316] \"2014-04-01\" \"2014-07-01\" \"2014-10-01\" \"2015-01-01\" \"2015-04-01\" \"2015-07-01\" \"2015-10-01\" \"2016-01-01\" \"2016-04-01\"\n[325] \"2016-07-01\" \"2016-10-01\" \"2017-01-01\" \"2017-04-01\" \"2017-07-01\" \"2017-10-01\" \"2018-01-01\" \"2018-04-01\" \"2018-07-01\"\n",
        "> ",
        "View(copper_melt)",
        "> ",
        "copper_melt$date[copper_melt$variable == ]",
        "Error: unexpected ']' in \"copper_melt$date[copper_melt$variable == ]\"\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "x <- complete.cases(copper_melt)",
        "> ",
        "x <- copper_melt[complete.cases(copper_melt)]",
        "Error in `[.data.frame`(copper_melt, complete.cases(copper_melt)) : \n  undefined columns selected\n",
        "> ",
        "x <- copper_melt[complete.cases(copper_melt), ]",
        "> ",
        "copper_melt <- copper_melt[complete.cases(copper_melt), ] # remove rows with missing data",
        "> ",
        "ggplot() +",
        "+ ",
        "      geom_rect(data=data.frame(xmin=(as.Date(c(\"2010-01-01\"))),",
        "+ ",
        "                            xmax=(as.Date(c(\"2017-04-01\"))),",
        "+ ",
        "                            ymin=-Inf,",
        "+ ",
        "                            ymax=Inf),",
        "+ ",
        "            aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),",
        "+ ",
        "            fill=\"orange\",alpha=0.3) +",
        "+ ",
        "      geom_line(data=zinc_melt, ",
        "+ ",
        "                aes(x=date, y=value, col=variable)) +",
        "+ ",
        "      ggtitle(\"Predictions for Copper\") +",
        "+ ",
        "      scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                          breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),",
        "+ ",
        "                          labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\")",
        "+ ",
        "                          )",
        "Warning message:\n",
        "Removed 15 rows containing missing values (geom_path). \n",
        "> ",
        "View(copper_melt)",
        "> ",
        "summary(copper_melt$date)",
        "        Min.      1st Qu.       Median         Mean      3rd Qu.         Max. \n\"1991-01-01\" \"1997-07-01\" \"2004-02-15\" \"2004-02-15\" \"2010-10-01\" \"2017-04-01\" \n",
        "> ",
        "copper_melt <- melt(all_results_copper, id = \"date\")",
        "> ",
        "# Plot results",
        "> ",
        "ggplot() +",
        "+ ",
        "      geom_rect(data=data.frame(xmin=(as.Date(c(\"2010-01-01\"))),",
        "+ ",
        "                            xmax=(as.Date(c(\"2017-04-01\"))),",
        "+ ",
        "                            ymin=-Inf,",
        "+ ",
        "                            ymax=Inf),",
        "+ ",
        "            aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),",
        "+ ",
        "            fill=\"orange\",alpha=0.3) +",
        "+ ",
        "      geom_line(data=zinc_melt, ",
        "+ ",
        "                aes(x=date, y=value, col=variable)) +",
        "+ ",
        "      ggtitle(\"Predictions for Copper\") +",
        "+ ",
        "      scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                          breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),",
        "+ ",
        "                          labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\")",
        "+ ",
        "                          )",
        "Warning message:\n",
        "Removed 15 rows containing missing values (geom_path). \n",
        "> ",
        "copper_melt <- copper_melt[complete.cases(copper_melt), ] # remove rows with missing data",
        "> ",
        "ggplot() +",
        "+ ",
        "      geom_rect(data=data.frame(xmin=(as.Date(c(\"2010-01-01\"))),",
        "+ ",
        "                            xmax=(as.Date(c(\"2017-04-01\"))),",
        "+ ",
        "                            ymin=-Inf,",
        "+ ",
        "                            ymax=Inf),",
        "+ ",
        "            aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),",
        "+ ",
        "            fill=\"orange\",alpha=0.3) +",
        "+ ",
        "      geom_line(data=zinc_melt, ",
        "+ ",
        "                aes(x=date, y=value, col=variable)) +",
        "+ ",
        "      ggtitle(\"Predictions for Copper\") +",
        "+ ",
        "      scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                          breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),",
        "+ ",
        "                          labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\")",
        "+ ",
        "                          )",
        "Warning message:\n",
        "Removed 15 rows containing missing values (geom_path). \n",
        "> ",
        "copper_melt <- melt(all_results_copper, id = \"date\")",
        "> ",
        "## plot with legend and highlight",
        "> ",
        "ggplot() +  ",
        "+ ",
        "       geom_line(data=copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "       ggtitle(\"Predictions for Copper\") + ",
        "+ ",
        "       scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),                           ",
        "+ ",
        "                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\") )",
        "Warning message:\n",
        "Removed 15 rows containing missing values (geom_path). \n",
        "> ",
        "ggplot() +  ",
        "+ ",
        "       geom_line(data=copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "       ggtitle(\"Predictions for Copper\") + ",
        "+ ",
        "       scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),                           ",
        "+ ",
        "                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\") ",
        "+ ",
        "                          )",
        "Warning message:\n",
        "Removed 15 rows containing missing values (geom_path). \n",
        "> ",
        "ggplot() +  ",
        "+ ",
        "       geom_line(data=copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "       ggtitle(\"Predictions for Copper\") + ",
        "+ ",
        "       scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),                           ",
        "+ ",
        "                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\")) +",
        "+ ",
        "      geom_rect(data=data.frame(xmin=(as.Date(c(\"2010-01-01\"))),",
        "+ ",
        "                            xmax=(as.Date(c(\"2017-04-01\"))),",
        "+ ",
        "                            ymin=-Inf,",
        "+ ",
        "                            ymax=Inf),",
        "+ ",
        "            aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),",
        "+ ",
        "            fill=\"orange\",alpha=0.3)",
        "Warning message:\n",
        "Removed 15 rows containing missing values (geom_path). \n",
        "> ",
        "## plot with legend and highlight",
        "> ",
        "ggplot() +  ",
        "+ ",
        "       geom_line(data=copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "       ggtitle(\"Predictions for Copper\") + ",
        "+ ",
        "       scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),                           ",
        "+ ",
        "                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\")) +",
        "+ ",
        "      geom_rect(data=data.frame(xmin=(as.Date(c(\"2010-01-01\"))),",
        "+ ",
        "                            xmax=(as.Date(c(\"2017-04-01\"))),",
        "+ ",
        "                            ymin=-Inf,",
        "+ ",
        "                            ymax=Inf),",
        "+ ",
        "            aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),",
        "+ ",
        "            fill=\"orange\",alpha=0.3) +",
        "+ ",
        "      xlim((as.Date(c(\"2010-01-01\"))), (as.Date(c(\"2017-04-01\"))))",
        "Warning message:\n",
        "Removed 243 rows containing missing values (geom_path). \n",
        "> ",
        "## plot with legend and highlight",
        "> ",
        "ggplot() +  ",
        "+ ",
        "       geom_line(data=copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "       ggtitle(\"Predictions for Copper\") + ",
        "+ ",
        "       scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),                           ",
        "+ ",
        "                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\")) +",
        "+ ",
        "      geom_rect(data=data.frame(xmin=(as.Date(c(\"2010-01-01\"))),",
        "+ ",
        "                            xmax=(as.Date(c(\"2017-04-01\"))),",
        "+ ",
        "                            ymin=-Inf,",
        "+ ",
        "                            ymax=Inf),",
        "+ ",
        "            aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),",
        "+ ",
        "            fill=\"orange\",alpha=0.3) +",
        "+ ",
        "      xlim((as.Date(c(\"1991-01-01\"))), (as.Date(c(\"2017-04-01\"))))",
        "Warning message:\n",
        "Removed 15 rows containing missing values (geom_path). \n",
        "> ",
        "ggplot() +  ",
        "+ ",
        "       geom_line(data=copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "       ggtitle(\"Predictions for Copper\") + ",
        "+ ",
        "       scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),                           ",
        "+ ",
        "                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\")) +",
        "+ ",
        "      geom_rect(data=data.frame(xmin=(as.Date(c(\"2010-01-01\"))),",
        "+ ",
        "                            xmax=(as.Date(c(\"2017-04-01\"))),",
        "+ ",
        "                            ymin=-Inf,",
        "+ ",
        "                            ymax=Inf),",
        "+ ",
        "            aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),",
        "+ ",
        "            fill=\"orange\",alpha=0.3)",
        "Warning message:\n",
        "Removed 15 rows containing missing values (geom_path). \n",
        "> ",
        "## plot with legend and highlight",
        "> ",
        "ggplot() +  ",
        "+ ",
        "       geom_line(data=copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "       ggtitle(\"Predictions for Copper\") + ",
        "+ ",
        "       scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),                           ",
        "+ ",
        "                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\")) +",
        "+ ",
        "      geom_rect(data=data.frame(xmin=(as.Date(c(\"2010-01-01\"))),",
        "+ ",
        "                            xmax=(as.Date(c(\"2017-04-01\"))),",
        "+ ",
        "                            ymin=-Inf,",
        "+ ",
        "                            ymax=Inf),",
        "+ ",
        "            aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),",
        "+ ",
        "            fill=\"orange\",alpha=0.3) +",
        "+ ",
        "      xlim((as.Date(c(\"1991-01-01\"))), (as.Date(c(\"2017-01-01\"))))",
        "Warning messages:\n",
        "1: Removed 18 rows containing missing values (geom_path). \n",
        "2: Removed 1 rows containing missing values (geom_rect). \n",
        "> ",
        "## plot with legend and highlight",
        "> ",
        "ggplot() +  ",
        "+ ",
        "       geom_line(data=copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "       ggtitle(\"Predictions for Copper\") + ",
        "+ ",
        "       scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),                           ",
        "+ ",
        "                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\")) +",
        "+ ",
        "      geom_rect(data=data.frame(xmin=(as.Date(c(\"2010-01-01\"))),",
        "+ ",
        "                            xmax=(as.Date(c(\"2017-04-01\"))),",
        "+ ",
        "                            ymin=-Inf,",
        "+ ",
        "                            ymax=Inf),",
        "+ ",
        "            aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),",
        "+ ",
        "            fill=\"orange\",alpha=0.3) +",
        "+ ",
        "      xlim((as.Date(c(\"2010-01-01\"))), (as.Date(c(\"2017-04-01\"))))",
        "Warning message:\n",
        "Removed 243 rows containing missing values (geom_path). \n",
        "> ",
        "## plot with legend and highlight",
        "> ",
        "ggplot() +  ",
        "+ ",
        "       geom_line(data=copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "       ggtitle(\"Predictions for Copper\") + ",
        "+ ",
        "       scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),                           ",
        "+ ",
        "                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\")) +",
        "+ ",
        "      geom_rect(data=data.frame(xmin=(as.Date(c(\"2010-01-01\"))),",
        "+ ",
        "                            xmax=(as.Date(c(\"2017-04-01\"))),",
        "+ ",
        "                            ymin=-Inf,",
        "+ ",
        "                            ymax=Inf),",
        "+ ",
        "            aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),",
        "+ ",
        "            fill=\"orange\",alpha=0.3) +",
        "+ ",
        "      xlim((as.Date(c(\"1991-01-01\"))), (as.Date(c(\"2017-01-01\"))))",
        "Warning messages:\n",
        "1: Removed 18 rows containing missing values (geom_path). \n",
        "2: Removed 1 rows containing missing values (geom_rect). \n",
        "> ",
        "ggplot() +  ",
        "+ ",
        "       geom_line(data=copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "       ggtitle(\"Predictions for Copper\") + ",
        "+ ",
        "       scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),                           ",
        "+ ",
        "                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\")) +",
        "+ ",
        "      geom_rect(data=data.frame(xmin=(as.Date(c(\"2010-01-01\"))),",
        "+ ",
        "                            xmax=(as.Date(c(\"2017-04-01\"))),",
        "+ ",
        "                            ymin=-Inf,",
        "+ ",
        "                            ymax=Inf),",
        "+ ",
        "            aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),",
        "+ ",
        "            fill=\"orange\",alpha=0.3)",
        "Warning message:\n",
        "Removed 15 rows containing missing values (geom_path). \n",
        "> ",
        "## plot with legend and highlight",
        "> ",
        "ggplot() +  ",
        "+ ",
        "       geom_line(data=copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "       ggtitle(\"Predictions for Copper\") + ",
        "+ ",
        "       scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),                           ",
        "+ ",
        "                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\")) +",
        "+ ",
        "      geom_rect(data=data.frame(xmin=(as.Date(c(\"2010-01-01\"))),",
        "+ ",
        "                            xmax=(as.Date(c(\"2017-04-01\"))),",
        "+ ",
        "                            ymin=-Inf,",
        "+ ",
        "                            ymax=Inf),",
        "+ ",
        "            aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),",
        "+ ",
        "            fill=\"orange\",alpha=0.3) +",
        "+ ",
        "      xlim(as.Date(\"1991-01-01\"), as.Date(\"2017-04-01\"))",
        "Warning message:\n",
        "Removed 15 rows containing missing values (geom_path). \n",
        "> ",
        "## plot with legend and highlight",
        "> ",
        "ggplot() +  ",
        "+ ",
        "       geom_line(data=copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "       ggtitle(\"Predictions for Copper\") + ",
        "+ ",
        "       scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),                           ",
        "+ ",
        "                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\")) +",
        "+ ",
        "      geom_rect(data=data.frame(xmin=(as.Date(c(\"2010-01-01\"))),",
        "+ ",
        "                            xmax=(as.Date(c(\"2017-04-01\"))),",
        "+ ",
        "                            ymin=-Inf,",
        "+ ",
        "                            ymax=Inf),",
        "+ ",
        "            aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),",
        "+ ",
        "            fill=\"orange\",alpha=0.3) +",
        "+ ",
        "      xlim(as.Date(\"1991-01-01\"), as.Date(\"2017-01-01\"))",
        "Warning messages:\n",
        "1: Removed 18 rows containing missing values (geom_path). \n",
        "2: Removed 1 rows containing missing values (geom_rect). \n",
        "> ",
        "## plot with legend and highlight",
        "> ",
        "ggplot() +  ",
        "+ ",
        "       geom_line(data=copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "       ggtitle(\"Predictions for Copper\") + ",
        "+ ",
        "       scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),                           ",
        "+ ",
        "                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\")) +",
        "+ ",
        "      geom_rect(data=data.frame(xmin=(as.Date(c(\"2010-01-01\"))),",
        "+ ",
        "                            xmax=(as.Date(c(\"2017-01-01\"))),",
        "+ ",
        "                            ymin=-Inf,",
        "+ ",
        "                            ymax=Inf),",
        "+ ",
        "            aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),",
        "+ ",
        "            fill=\"orange\",alpha=0.3) +",
        "+ ",
        "      xlim(as.Date(\"1991-01-01\"), as.Date(\"2017-01-01\"))",
        "Warning message:\n",
        "Removed 18 rows containing missing values (geom_path). \n",
        "> ",
        "summary(copper_melt$date)",
        "        Min.      1st Qu.       Median         Mean      3rd Qu.         Max. \n\"1991-01-01\" \"1997-10-01\" \"2004-10-01\" \"2004-09-30\" \"2011-10-01\" \"2018-07-01\" \n",
        "> ",
        "ggplot() +  ",
        "+ ",
        "       geom_line(data=copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "       ggtitle(\"Predictions for Copper\") + ",
        "+ ",
        "       scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),                           ",
        "+ ",
        "                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\")) +",
        "+ ",
        "      geom_rect(data=data.frame(xmin=(as.Date(c(\"2010-01-01\"))),",
        "+ ",
        "                            xmax=(as.Date(c(\"2017-01-01\"))),",
        "+ ",
        "                            ymin=-Inf,",
        "+ ",
        "                            ymax=Inf),",
        "+ ",
        "            aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),",
        "+ ",
        "            fill=\"orange\",alpha=0.3) +",
        "+ ",
        "      xlim(as.Date(\"1991-01-01\"), as.Date(\"2018-07-01\"))",
        "Warning message:\n",
        "Removed 15 rows containing missing values (geom_path). \n",
        "> ",
        "## plot with legend and highlight",
        "> ",
        "ggplot() +  ",
        "+ ",
        "       geom_line(data=copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "       ggtitle(\"Predictions for Copper\") + ",
        "+ ",
        "       scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),                           ",
        "+ ",
        "                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\")) +",
        "+ ",
        "      geom_rect(data=data.frame(xmin=(as.Date(c(\"2010-01-01\"))),",
        "+ ",
        "                            xmax=(as.Date(c(\"2018-07-01\"))),",
        "+ ",
        "                            ymin=-Inf,",
        "+ ",
        "                            ymax=Inf),",
        "+ ",
        "            aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),",
        "+ ",
        "            fill=\"orange\",alpha=0.3) +",
        "+ ",
        "      xlim(as.Date(\"1991-01-01\"), as.Date(\"2018-07-01\"))",
        "Warning message:\n",
        "Removed 15 rows containing missing values (geom_path). \n",
        "> ",
        "## plot with legend and highlight",
        "> ",
        "ggplot() +  ",
        "+ ",
        "       geom_line(data=copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "       ggtitle(\"Predictions for Copper\") + ",
        "+ ",
        "       scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),                           ",
        "+ ",
        "                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\")) +",
        "+ ",
        "      geom_rect(data=data.frame(xmin=(as.Date(c(\"2010-01-01\"))),",
        "+ ",
        "                            xmax=(as.Date(c(\"2018-01-01\"))),",
        "+ ",
        "                            ymin=-Inf,",
        "+ ",
        "                            ymax=Inf),",
        "+ ",
        "            aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),",
        "+ ",
        "            fill=\"orange\",alpha=0.3) +",
        "+ ",
        "      xlim(as.Date(\"1991-01-01\"), as.Date(\"2018-01-01\"))",
        "Warning message:\n",
        "Removed 15 rows containing missing values (geom_path). \n",
        "> ",
        "## plot with legend and highlight",
        "> ",
        "ggplot() +  ",
        "+ ",
        "       geom_line(data=copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "       ggtitle(\"Predictions for Copper\") + ",
        "+ ",
        "       scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),                           ",
        "+ ",
        "                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\")) +",
        "+ ",
        "      geom_rect(data=data.frame(xmin=(as.Date(c(\"2010-01-01\"))),",
        "+ ",
        "                            xmax=(as.Date(c(\"2018-01-01\"))),",
        "+ ",
        "                            ymin=-Inf,",
        "+ ",
        "                            ymax=Inf),",
        "+ ",
        "            aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),",
        "+ ",
        "            fill=\"orange\",alpha=0.3)",
        "Warning message:\n",
        "Removed 15 rows containing missing values (geom_path). \n",
        "> ",
        "## plot with legend and highlight",
        "> ",
        "ggplot() +  ",
        "+ ",
        "       geom_line(data=copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "       ggtitle(\"Predictions for Copper\") + ",
        "+ ",
        "       scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),                           ",
        "+ ",
        "                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\")) +",
        "+ ",
        "      geom_rect(data=data.frame(xmin=(as.Date(c(\"2010-01-01\"))),",
        "+ ",
        "                            xmax=(as.Date(c(\"2018-01-01\"))),",
        "+ ",
        "                            ymin=-Inf,",
        "+ ",
        "                            ymax=Inf),",
        "+ ",
        "            aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),",
        "+ ",
        "            fill=\"orange\",alpha=0.3) +",
        "+ ",
        "      xlab(\"Year\") +",
        "+ ",
        "      ylab(\"Price in USD\")",
        "Warning message:\n",
        "Removed 15 rows containing missing values (geom_path). \n",
        "> ",
        "## plot with legend and highlight",
        "> ",
        "ggplot() +  ",
        "+ ",
        "       geom_line(data=copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "       ggtitle(\"Predictions for Copper\") + ",
        "+ ",
        "       scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),                           ",
        "+ ",
        "                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\")) +",
        "+ ",
        "      geom_rect(data=data.frame(xmin=(as.Date(c(\"2010-01-01\"))),",
        "+ ",
        "                            xmax=(as.Date(c(\"2018-01-01\"))),",
        "+ ",
        "                            ymin=-Inf,",
        "+ ",
        "                            ymax=Inf),",
        "+ ",
        "            aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),",
        "+ ",
        "            fill=\"orange\",alpha=0.3) +",
        "+ ",
        "      xlab(\"Year\") +",
        "+ ",
        "      ylab(\"Price in USD\") +",
        "+ ",
        "      theme_economist()",
        "Error in theme_economist() : could not find function \"theme_economist\"\n",
        "> ",
        "## plot with legend and highlight",
        "> ",
        "ggplot() +  ",
        "+ ",
        "       geom_line(data=copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "       ggtitle(\"Predictions for Copper\") + ",
        "+ ",
        "       scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),                           ",
        "+ ",
        "                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\")) +",
        "+ ",
        "      geom_rect(data=data.frame(xmin=(as.Date(c(\"2010-01-01\"))),",
        "+ ",
        "                            xmax=(as.Date(c(\"2018-01-01\"))),",
        "+ ",
        "                            ymin=-Inf,",
        "+ ",
        "                            ymax=Inf),",
        "+ ",
        "            aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),",
        "+ ",
        "            fill=\"orange\",alpha=0.3) +",
        "+ ",
        "      xlab(\"Year\") +",
        "+ ",
        "      ylab(\"Price in USD\") +",
        "+ ",
        "      theme_void()",
        "Warning message:\n",
        "Removed 15 rows containing missing values (geom_path). \n",
        "> ",
        "## plot with legend and highlight",
        "> ",
        "ggplot() +  ",
        "+ ",
        "       geom_line(data=copper_melt, aes(x=date, y=value, col=variable)) +",
        "+ ",
        "       ggtitle(\"Predictions for Copper\") + ",
        "+ ",
        "       scale_color_discrete(name  =\"Models\",",
        "+ ",
        "                           breaks=c(\"predict.simple_LR_copper..data.\", \"predict.RF_copper..data.\", \"copper_price\"),                           ",
        "+ ",
        "                           labels=c(\"Linear Regression\", \"Random Forest\", \"Actual Price\")) +",
        "+ ",
        "      geom_rect(data=data.frame(xmin=(as.Date(c(\"2010-01-01\"))),",
        "+ ",
        "                            xmax=(as.Date(c(\"2018-01-01\"))),",
        "+ ",
        "                            ymin=-Inf,",
        "+ ",
        "                            ymax=Inf),",
        "+ ",
        "            aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),",
        "+ ",
        "            fill=\"orange\",alpha=0.3) +",
        "+ ",
        "      xlab(\"Year\") +",
        "+ ",
        "      ylab(\"Price in USD\") +",
        "+ ",
        "      theme_economist()",
        "Error in theme_economist() : could not find function \"theme_economist\"\n",
        "> ",
        "require(\"ggthemes\")",
        "Loading required package: ggthemes\n",
        "Warning message:\n",
        "In library(package, lib.loc = lib.loc, character.only = TRUE, logical.return = TRUE,  :",
        "\n ",
        " there is no package called ‘ggthemes’\n",
        "> ",
        "install.packages(\"ggthemes\") # Install ",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "library(ggthemes) # Load",
        "Error in library(ggthemes) : there is no package called ‘ggthemes’\n",
        "\nRestarting R session...\n\n"
    ],
    "type" : [
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        0,
        1,
        3,
        2
    ]
}